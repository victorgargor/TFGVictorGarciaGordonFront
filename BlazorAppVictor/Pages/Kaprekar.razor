@page "/kaprekar"
@using System.Text.Json
@inject HttpClient Http
@inject SweetAlertService Swal

<PageTitle>Kaprekar</PageTitle>

<style>
	/* Estilos globales */
	body {
		font-family: 'Poppins', sans-serif;
		background-color: #f6f8fa;
		color: #24292f;
		margin: 0;
		padding: 20px;
		overflow: hidden;
	}

	/* Título */
	h3 {
		color: black;
		text-align: center;
		font-size: 3rem;
		font-weight: bold;
		margin-top: 30px;
		margin-bottom: 30px;
		grid-column: 1 / -1;
	}

	/* Contenedor principal */
	.container {
		width: 100%;
		margin: auto;
		padding: 20px;
		margin-top: 100px;
		border-radius: 12px;
		box-shadow: 0 0 10px rgba(27, 31, 35, 0.1);
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 20px;
		align-items: start;
	}

	/* Contenedor para introducir los datos  */
	.row {
		background-color: #fff;
		border: 1px solid #ccc;
		border-radius: 6px;
		padding: 15px;
		margin-left: 3px;
		width: 100%;
		height: 200px; 
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
	}

	/* Salida */
	.resultados p {
		visibility: @(numeroKaprekar.HasValue ? "visible" : "hidden");
		margin-right: 5px;
	}


	/* Inputs */
	input[type="text"] {
		width: 80%;
		padding: 14px;
		border-radius: 6px;
		border: 1px solid #ccc;
		font-size: 1.1rem;
		margin-top: 20px;
	}

	/* Botones */
	.btn-operation {
		width: 45%;
		background-color: #0969da;
		color: white;
		font-size: 1.1rem;
		font-weight: bold;
		padding: 12px 20px;
		border: solid 1px black;
		border-radius: 6px;
		margin-top: 20px;
		cursor: pointer;
		transition: all 0.3s;
	}

		.btn-operation:hover {
			background-color: #0550ae;
			transform: scale(1.1);
		}
</style>

<h3>Kaprekar</h3>

<div class="container">
	<!-- Inputs -->
	<div class="row">
		<input type="text" @bind="numeroTexto" placeholder="Introduzca un número" /> 
		<button class="btn-operation" @onclick="VerificarKaprekar">Verificar</button> 
	</div>

	<!-- Salida -->
	<div class="row resultados">
		<p>Número: @numeroKaprekar</p>
		<p>¿Es Kaprekar?: @(esKaprekar == true ? "Sí" : "No")</p>
		<p>Número de operaciones: @operacionesKaprekar</p>
	</div>
</div>

@code {
	// Entrada del usuario
	private string numeroTexto = ""; 

	// Para almacenar el número
	private int? numeroKaprekar;  

	// Para indica si el número es o no Kaprekar
	private bool? esKaprekar;  

	// Número de operaciones para saber si es Kaprekar o no el número
	private int? operacionesKaprekar;

	/// <summary>
	/// Verifica si el número ingresado es de Kaprekar
	/// </summary>
	private async Task VerificarKaprekar()
	{
		// Valido la entrada para que el valor ingresado sea un número entero con las características que yo quiero
		if (!int.TryParse(numeroTexto, out int numero) || numero <= 0)
		{
			await Swal.FireAsync("Error", "El parámetro proporcionado debe de ser un número entero positivo (máximo 9 dígitos).", SweetAlertIcon.Error);
			numeroKaprekar = null;
			esKaprekar = null;
			operacionesKaprekar = null;
			return;
		}

		try
		{
			// Construyo la URL de la API
			string url = $"https://localhost:7123/api/kaprekar/{numero}";

			// Realiza la solicitud a la API
			var response = await Http.GetAsync(url);

			// Lanzo una excepción si la respuesta no es exitosa
			response.EnsureSuccessStatusCode();

			// Obtiene la respuesta JSON
			var jsonResponse = await response.Content.ReadAsStringAsync();

			// Deserializo la respuesta JSON en un objeto KaprekarResponse
			var kaprekar = JsonSerializer.Deserialize<KaprekarResponse>(jsonResponse, new JsonSerializerOptions
				{
					PropertyNameCaseInsensitive = true
				});

			// Si la respuesta no es null, actualizo las propiedades con los datos obtenidos
			if (kaprekar != null)
			{
				numeroKaprekar = kaprekar.Numero;
				esKaprekar = kaprekar.EsKaprekar;
				operacionesKaprekar = kaprekar.Operaciones;
			}
		}
		catch (Exception ex)
		{
			// Manejo de excepciones
			await Swal.FireAsync("Error", "Ocurrió un error al verificar el número Kaprekar: " + ex.Message, SweetAlertIcon.Error);
			numeroKaprekar = null;
			esKaprekar = null;
			operacionesKaprekar = null;
		}
	}

	/// <summary>
	/// Representa la respuesta de la API Kaprekar
	/// </summary>
	public class KaprekarResponse
	{
		/// <summary>
		/// Número evaluado
		/// </summary>
		public int Numero { get; set; }

		/// <summary>
		/// Indica si el número es Kaprekar
		/// </summary>
		public bool EsKaprekar { get; set; }

		/// <summary>
		/// Número de operaciones realizadas para verificar si es Kaprekar
		/// </summary>
		public int Operaciones { get; set; }
	}
}
