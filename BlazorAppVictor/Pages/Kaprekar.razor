@page "/kaprekar"  
@using System.Text.Json  
@inject HttpClient Http 

<PageTitle>Kaprekar</PageTitle>  

<style>
	/* Estilos globales */
	body {
		font-family: 'Poppins', sans-serif;
		background-color: #f6f8fa;
		color: #24292f;
		margin: 0;
		padding: 20px;
		overflow: hidden;
	}

	/* Título */
	h3 {
		color: black;
		text-align: center;
		font-size: 2.5rem;
		font-weight: bold;
		margin-bottom: 30px;
	}

	/* Contenedor principal */
	.container {
		max-width: 600px;
		margin: 0 auto;
		padding: 20px;
		border-radius: 12px;
		box-shadow: 0 0 10px rgba(27, 31, 35, 0.1);
		background: white;
	}

	/* Contenedor para los botones */
	.row {
		display: flex;
		justify-content: center;
		flex-wrap: wrap;
		gap: 10px;
		margin-bottom: 15px; 
	}

	/* Input de texto */
	input[type="text"] {
		width: 80%;
		padding: 14px; 
		border-radius: 6px;
		border: 1px solid #ccc;
		font-size: 1.1rem;
		margin-top: 20px;
	}

	/* Botón */
	.btn-operation {
		width: 45%;
		background-color: #0969da;
		color: white;
		font-size: 1.1rem;
		font-weight: bold;
		padding: 12px 20px;
		border: solid 1px black;
		border-radius: 6px;
		margin: 5px;
		cursor: pointer;
		transition: all 0.3s;
	}

		/* Efecto hover */
		.btn-operation:hover {
			background-color: #0550ae;
			transform: scale(1.1);
		}

	/* Mensaje de error */
	.error {
		color: red;
		font-size: 1rem;
		margin-top: 10px; 
		text-align: center;
	}
</style>

<h3>Kaprekar</h3>

<div class="container">
	<!-- Inputs -->
	<div class="row">
		<input type="text" @bind="numeroTexto" placeholder="Introduce un número" /> <!-- Campo de entrada para el número -->
		<button class="btn-operation" @onclick="VerificarKaprekar">Verificar</button> <!-- Botón que ejecuta la verificación -->
	</div>

	<!-- Errores -->
	@if (!string.IsNullOrEmpty(error))
	{
		<div class="row">
			<p class="error">@error</p>
		</div>
	}

	<!--Salida -->
	@if (esKaprekar != null)
	{
		<div class="row">
			<p>Número: @numeroKaprekar</p>
			<p>¿Es Kaprekar?: @(esKaprekar == true ? "Sí" : "No")</p>
			<p>Número de operaciones: @operacionesKaprekar</p>
		</div>
	}
</div>

@code {
	private string numeroTexto = ""; // Entrada del usuario
	private int? numeroKaprekar;  // Almacena el número 
	private bool? esKaprekar;  // Indica si el número es de Kaprekar o no
	private int? operacionesKaprekar;  // Cantidad de operaciones realizadas en la verificación
	private string? error;  // Para el mensaje de error

	/// <summary>
	/// Verifica si el número ingresado es de Kaprekar
	/// </summary>
	private async Task VerificarKaprekar()
	{
		// Valido la entrada para que el valor ingresado sea un número entero válido
		if (!int.TryParse(numeroTexto, out int numero))
		{
			error = "Por favor, introduce un número entero válido.";
			numeroKaprekar = null;
			esKaprekar = null;
			operacionesKaprekar = null;
			return;
		}

		try
		{
			// Construyo la URL de la API
			string url = $"https://localhost:7123/api/kaprekar/{numero}";

			// Realiza la solicitud a la API
			var response = await Http.GetAsync(url);

			// Lanzo una excepción si la respuesta no es exitosa
			response.EnsureSuccessStatusCode(); 

			// Obtiene la respuesta JSON
			var jsonResponse = await response.Content.ReadAsStringAsync();

			// Deserializo la respuesta JSON en un objeto KaprekarResponse
			var kaprekar = JsonSerializer.Deserialize<KaprekarResponse>(jsonResponse, new JsonSerializerOptions
				{
					PropertyNameCaseInsensitive = true
				});

			// Si la respuesta no es null, actualizo las propiedades con los datos obtenidos
			if (kaprekar != null)
			{
				numeroKaprekar = kaprekar.Numero;
				esKaprekar = kaprekar.EsKaprekar;
				operacionesKaprekar = kaprekar.Operaciones;
				// Limpio cualquier mensaje de error anterior
				error = string.Empty; 
			}
		}
		catch (Exception ex)
		{
			// En caso de errores con la API
			error = "Ocurrió un error al verificar el número Kaprekar: " + ex.Message;
			numeroKaprekar = null;
			esKaprekar = null;
			operacionesKaprekar = null;
		}
	}

	/// <summary>
	/// Representa la respuesta de la API Kaprekar
	/// </summary>
	public class KaprekarResponse
	{
		/// <summary>
		/// Número evaluado
		/// </summary>
		public int Numero { get; set; }

		/// <summary>
		/// Indica si el número es Kaprekar
		/// </summary>
		public bool EsKaprekar { get; set; }

		/// <summary>
		/// Número de operaciones realizadas para verificar si es Kaprekar
		/// </summary>
		public int Operaciones { get; set; }
	}
}
