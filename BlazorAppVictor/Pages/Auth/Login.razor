@page "/Login"
@using BlazorAppVictor.Auth
@using BlazorAppVictor.DTOs
@inject SweetAlertService Swal
@inject ILoginService loginService
@inject NavigationManager Navegador


<h3>Login</h3>

<EditForm Model="userInfo" OnValidSubmit="LoguearUsuario">
	<DataAnnotationsValidator />

	<div class="mb-3">
		<label>Email:</label>
		<div>
			<InputText class="form-control" @bind-Value="userInfo.Email" />
			<ValidationMessage For="@(() => userInfo.Email)" />
		</div>
	</div>

	<div class="mb-3">
		<label>Password:</label>
		<div>
			<InputText class="form-control" @bind-Value="userInfo.Password" />
			<ValidationMessage For="@(() => userInfo.Password)" />
		</div>
	</div>

	<button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>

@code {
	private UserInfoDTO userInfo = new UserInfoDTO();

	private async Task LoguearUsuario()
	{
		var respuestaHTTP = await repositorio.Post<UserInfoDTO, UserTokenDTO>("api/cuentas/login", userInfo);

	if (respuestaHTTP.Error)
		{
			var mensajeError = await respuestaHTTP.ObtenerMensajeError();
			await Swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
		}
		else
		{
			await loginService.Login(respuestaHTTP.Response!.Token);
			Navegador.NavigateTo("");
		}

	}
}
